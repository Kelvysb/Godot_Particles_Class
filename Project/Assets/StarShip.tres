[gd_resource type="VisualShader" load_steps=16 format=3 uid="uid://ljkoxjeqcxrr"]

[ext_resource type="Texture2D" uid="uid://dgrs64vp52p1m" path="res://Assets/StarShipIdMap.png" id="1_se3lm"]
[ext_resource type="Script" path="res://addons/IdMap/Idmap.gd" id="2_l48pl"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_m3nrv"]
constant = Color(1, 0, 0, 1)

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_6645t"]
parameter_name = "Body"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_1ux7k"]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_fgmmb"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wvksq"]
operator = 6

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_iqdoh"]
texture = ExtResource("1_se3lm")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_v2web"]
initialized = true
script = ExtResource("2_l48pl")

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_504jt"]
constant = Color(0, 0, 1, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_hw8pl"]
constant = 0.05

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_lo10w"]
parameter_name = "Vidro"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_756uv"]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_nw2ru"]
operator = 2

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_1q7a7"]
initialized = true
script = ExtResource("2_l48pl")

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Vidro;
uniform sampler2D tex_frg_2;
uniform sampler2D Body;


// IdMap

		vec3 GetMask(vec3 colorId, vec3 idMap, float tolerance) {

		// Vector Decompose Color Id
			float colorId_R = colorId.x;
			float colorId_G = colorId.y;
			float colorId_B = colorId.z;

		// Decompose IdMap
			float idMap_R = idMap.x;
			float idMap_G = idMap.y;
			float idMap_B = idMap.z;

		// subtract R
			float result_R = colorId_R - idMap_R;

		// Compare R
			bool compare_R = (abs(result_R - 0.00000) < tolerance);

		// Subtract G
			float result_G = colorId_G - idMap_G;

		// Compare G
			bool compare_G = (abs(result_G - 0.00000) < tolerance);

		// Divide R by G
			float result_R_G = (compare_R ? 1.0 : 0.0) / (compare_G ? 1.0 : 0.0);

		// Subtract B
			float result_B = colorId_B - idMap_B;

		// Compare B
			bool compare_B = (abs(result_B - 0.00000) < tolerance);

		// Divide R_G By B
			float result_R_G_B = result_R_G / (compare_B ? 1.0 : 0.0);

		// result
			return vec3(result_R_G_B);

		}
	

void fragment() {
	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(Vidro, UV);


// ColorConstant:4
	vec4 n_out4p0 = vec4(0.000000, 0.000000, 1.000000, 1.000000);


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// FloatConstant:5
	float n_out5p0 = 0.050000;


	vec3 n_out3p0;
// IdMap:3
	{
		n_out3p0 = GetMask(vec3(n_out4p0.xyz), vec3(n_out2p0.xyz), n_out5p0);
	}


// VectorOp:8
	vec3 n_out8p0 = vec3(n_out7p0.xyz) * n_out3p0;


	vec4 n_out12p0;
// Texture2D:12
	n_out12p0 = texture(Body, UV);


// ColorConstant:10
	vec4 n_out10p0 = vec4(1.000000, 0.000000, 0.000000, 1.000000);


	vec3 n_out9p0;
// IdMap:9
	{
		n_out9p0 = GetMask(vec3(n_out10p0.xyz), vec3(n_out2p0.xyz), n_out5p0);
	}


// VectorOp:13
	vec3 n_out13p0 = vec3(n_out12p0.xyz) * n_out9p0;


// VectorOp:14
	vec3 n_out14p0 = max(n_out8p0, n_out13p0);


// Output:0
	ALBEDO = n_out14p0;


}
"
graph_offset = Vector2(-832.229, -370.579)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_iqdoh")
nodes/fragment/2/position = Vector2(-560, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeCustom_v2web")
nodes/fragment/3/position = Vector2(-260, 180)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorConstant_504jt")
nodes/fragment/4/position = Vector2(-520, 180)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_hw8pl")
nodes/fragment/5/position = Vector2(-480, 420)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture2DParameter_lo10w")
nodes/fragment/6/position = Vector2(-800, -80)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_756uv")
nodes/fragment/7/position = Vector2(-440, -20)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_nw2ru")
nodes/fragment/8/position = Vector2(-20, 80)
nodes/fragment/9/node = SubResource("VisualShaderNodeCustom_1q7a7")
nodes/fragment/9/position = Vector2(-260, 280)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorConstant_m3nrv")
nodes/fragment/10/position = Vector2(-520, 140)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture2DParameter_6645t")
nodes/fragment/11/position = Vector2(-800, -300)
nodes/fragment/12/node = SubResource("VisualShaderNodeTexture_1ux7k")
nodes/fragment/12/position = Vector2(-440, -240)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_fgmmb")
nodes/fragment/13/position = Vector2(-20, 220)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorOp_wvksq")
nodes/fragment/14/position = Vector2(160, 140)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 1, 4, 0, 3, 0, 5, 0, 3, 2, 6, 0, 7, 2, 7, 0, 8, 0, 3, 0, 8, 1, 2, 0, 9, 1, 5, 0, 9, 2, 10, 0, 9, 0, 11, 0, 12, 2, 12, 0, 13, 0, 9, 0, 13, 1, 8, 0, 14, 0, 13, 0, 14, 1, 14, 0, 0, 0)
